# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Upload Python Package

on:
  schedule:
    - cron:  '*/60 * * * *' # 주기적으로 실행하기 위한 스케줄링 - cron 설정
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [created]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.x
      uses: actions/setup-python@v1
      with:
          python-version: '3.x'
          architecture: 'x64'
          
          
    - name: Setup Chromedriver
      uses: nanasess/setup-chromedriver@v1.0.1
 
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        echo 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main' | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update 
        sudo apt-get install google-chrome-stable
        
        sudo apt install unzip
        wget https://chromedriver.storage.googleapis.com/83.0.4103.39/chromedriver_linux64.zip
        unzip chromedriver_linux64.zip
        
        sudo apt-get update
        sudo apt-get install python
        sudo apt-get install python-pip

    
    - name: Run Scraper with python
      run: |
        python "Scraper_opt.py"
